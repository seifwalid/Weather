[
  {
    "ContainingType": "Weather.Controllers.AlertController",
    "Method": "GetByUserId",
    "RelativePath": "{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.ForecastController",
    "Method": "GetAirQualityForecast",
    "RelativePath": "air",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.AirQualityController",
    "Method": "GetAirQuality",
    "RelativePath": "api/air",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.LimitsController",
    "Method": "GetAll",
    "RelativePath": "api/limit",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.LimitsController",
    "Method": "Update",
    "RelativePath": "api/limit/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "Weather.Dtos.Limit.UpdateLimitDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.LimitsController",
    "Method": "GetById",
    "RelativePath": "api/limit/{limitid}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "limitid",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.LimitsController",
    "Method": "CreateLimits",
    "RelativePath": "api/limit/{userId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "limitDto",
        "Type": "Weather.Dtos.Limit.CreateLimitDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.UserController",
    "Method": "GetById",
    "RelativePath": "api/user/{uid}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "uid",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.UserController",
    "Method": "Update",
    "RelativePath": "api/user/{uid}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "uid",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "Weather.Dtos.User.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.UserController",
    "Method": "GetLimitsByUserId",
    "RelativePath": "api/user/{uid}/limits",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "uid",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.UserController",
    "Method": "CheckAirQuality",
    "RelativePath": "api/user/CheckAirQuality/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.UserController",
    "Method": "CheckWeather",
    "RelativePath": "api/user/CheckWeather/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.WeatherController",
    "Method": "GetWeather",
    "RelativePath": "api/weather",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "Weather.Dtos.User.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.UserController",
    "Method": "Create",
    "RelativePath": "register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDto",
        "Type": "Weather.Dtos.User.CreateUserRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.ForecastController",
    "Method": "GetTempAndHumdidity",
    "RelativePath": "weather",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Weather.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Weather.WeatherForecast, Weather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]